 ------
 Integration Testing With DynamoDB Table/Fixture
 ------
 Yegor Bugayenko
 ------
 2013-07-14
 ------

~~
~~ Copyright (c) 2012-2013, JCabi.com
~~ All rights reserved.
~~
~~ Redistribution and use in source and binary forms, with or without
~~ modification, are permitted provided that the following conditions
~~ are met: 1) Redistributions of source code must retain the above
~~ copyright notice, this list of conditions and the following
~~ disclaimer. 2) Redistributions in binary form must reproduce the above
~~ copyright notice, this list of conditions and the following
~~ disclaimer in the documentation and/or other materials provided
~~ with the distribution. 3) Neither the name of the jcabi.com nor
~~ the names of its contributors may be used to endorse or promote
~~ products derived from this software without specific prior written
~~ permission.
~~
~~ THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
~~ "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT
~~ NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
~~ FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
~~ THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
~~ INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
~~ (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
~~ SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
~~ HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
~~ STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
~~ ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
~~ OF THE POSSIBILITY OF SUCH DAMAGE.
~~

Integration Testing With DynamoDB Table/Fixture

  This is how your JUnit integration test should look like
  ({{{./testapidocs-${project.version}/com/jcabi/dynamo/TableMocker.html}<<<TableMocker>>>}} class
  is used from <<<com.jcabi:jcabi-dynamo:mock>>> artifact):

+--
public class FooITCase {
  private Region region;
  private TableMocker table;
  @Before
  public void prepare() {
    this.region = new Region.Simple(/* your AWS credentials */);
    this.table = new TableMocker(
      this.region,
      new CreateTableRequest()
        .withTableName("my-sample-table")
        .withProvisionedThroughput(
            new ProvisionedThroughput()
                .withReadCapacityUnits(1L)
                .withWriteCapacityUnits(1L)
        )
        .withAttributeDefinitions(
            new AttributeDefinition()
                .withAttributeName("hash")
                .withAttributeType(ScalarAttributeType.S)
        )
        .withKeySchema(
            new KeySchemaElement()
                .withAttributeName("hash")
                .withKeyType(KeyType.HASH)
        )
    );
    this.table.create();
  }
  @After
  public void dropTable() {
    this.table.drop();
  }
  @Test
  public void createsAndDeletesItems() {
    Foo foo = new Foo(this.region);
    foo.doSomething();
  }
}
+--

  {{{./testapidocs-${project.version}/com/jcabi/dynamo/TableMocker.html}<<<TableMocker>>>}}
  will create a table on demand and will drop it when tests are finished.

  The class is shipped in <<<mock>>>-classified dependency
  (you can also download
  {{{http://repo1.maven.org/maven2/com/jcabi/jcabi-dynamo/${project.version}/jcabi-dynamo-${project.version}-mock.jar}<<<jcabi-dynamo-${project.version}-mock.jar>>>}}
  and add it to the classpath):

+--
<dependency>
  <groupId>com.jcabi</groupId>
  <artifactId>jcabi-dynamo</artifactId>
  <version>${project.version}</version>
  <scope>test</scope>
  <classifier>mock</classifier>
</dependency>
+--
